/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const main: (a: number, b: number) => number;
export const __wbg_jsowner_free: (a: number, b: number) => void;
export const __wbg_hash_free: (a: number, b: number) => void;
export const hash_constructor: (a: any) => [number, number, number];
export const hash_toString: (a: number) => [number, number];
export const hash_equals: (a: number, b: number) => number;
export const hash_toBytes: (a: number) => [number, number];
export const __wbg_instruction_free: (a: number, b: number) => void;
export const __wbg_message_free: (a: number, b: number) => void;
export const __wbg_get_message_recent_blockhash: (a: number) => number;
export const __wbg_set_message_recent_blockhash: (a: number, b: number) => void;
export const __wbg_instructions_free: (a: number, b: number) => void;
export const instructions_constructor: () => number;
export const instructions_push: (a: number, b: number) => void;
export const systeminstruction_createAccount: (a: number, b: number, c: bigint, d: bigint, e: number) => number;
export const systeminstruction_createAccountWithSeed: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: bigint, h: number) => number;
export const systeminstruction_assign: (a: number, b: number) => number;
export const systeminstruction_assignWithSeed: (a: number, b: number, c: number, d: number, e: number) => number;
export const systeminstruction_transfer: (a: number, b: number, c: bigint) => number;
export const systeminstruction_transferWithSeed: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint) => number;
export const systeminstruction_allocate: (a: number, b: bigint) => number;
export const systeminstruction_allocateWithSeed: (a: number, b: number, c: number, d: number, e: bigint, f: number) => number;
export const systeminstruction_createNonceAccount: (a: number, b: number, c: number, d: bigint) => any;
export const systeminstruction_advanceNonceAccount: (a: number, b: number) => number;
export const systeminstruction_withdrawNonceAccount: (a: number, b: number, c: number, d: bigint) => number;
export const systeminstruction_authorizeNonceAccount: (a: number, b: number, c: number) => number;
export const pubkey_constructor: (a: any) => [number, number, number];
export const pubkey_toString: (a: number) => [number, number];
export const pubkey_isOnCurve: (a: number) => number;
export const pubkey_createWithSeed: (a: number, b: number, c: number, d: number) => [number, number, number];
export const pubkey_createProgramAddress: (a: number, b: number, c: number) => [number, number, number];
export const pubkey_findProgramAddress: (a: number, b: number, c: number) => [number, number, number];
export const __wbg_keypair_free: (a: number, b: number) => void;
export const __wbg_transaction_free: (a: number, b: number) => void;
export const keypair_constructor: () => number;
export const keypair_toBytes: (a: number) => [number, number];
export const keypair_fromBytes: (a: number, b: number) => [number, number, number];
export const keypair_pubkey: (a: number) => number;
export const transaction_constructor: (a: number, b: number) => number;
export const transaction_message: (a: number) => number;
export const transaction_messageData: (a: number) => [number, number];
export const transaction_verify: (a: number) => [number, number];
export const transaction_partialSign: (a: number, b: number, c: number) => void;
export const transaction_isSigned: (a: number) => number;
export const transaction_toBytes: (a: number) => [number, number];
export const transaction_fromBytes: (a: number, b: number) => [number, number, number];
export const __wbg_elgamalkeypair_free: (a: number, b: number) => void;
export const elgamalkeypair_new_rand: () => number;
export const elgamalkeypair_pubkey_owned: (a: number) => number;
export const __wbg_elgamalpubkey_free: (a: number, b: number) => void;
export const podelgamalpubkey_constructor: (a: any) => [number, number, number];
export const podelgamalpubkey_toString: (a: number) => [number, number];
export const podelgamalpubkey_compressed: (a: number) => number;
export const podelgamalpubkey_decompressed: (a: number) => [number, number, number];
export const solana_program_init: () => void;
export const pubkey_equals: (a: number, b: number) => number;
export const podelgamalpubkey_equals: (a: number, b: number) => number;
export const pubkey_toBytes: (a: number) => [number, number];
export const podelgamalpubkey_toBytes: (a: number) => [number, number];
export const __wbg_pubkey_free: (a: number, b: number) => void;
export const __wbg_podelgamalpubkey_free: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const __wbindgen_export_7: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const closure121_externref_shim: (a: number, b: number, c: any) => void;
export const closure129_externref_shim: (a: number, b: number, c: any) => void;
export const _ZN132__LT_dyn_u20_core__ops__function__FnMut_LT__LP__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17h2e5a831b63380ba5E: (a: number, b: number) => void;
export const __wbindgen_start: () => void;
